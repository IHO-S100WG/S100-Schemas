<?xml version="1.0" encoding="UTF-8"?>
<!-- Â© Copyright 2011-2018, 2019, 2022 International Hydrographic Organisation
License
Certain parts of this document may refer to or be based on the standards, documents, schemas,
or other material of the International Organization for Standardization (ISO), Open Geospatial
Consortium (OGC), International Hydrographic Organization / Organisation Hydrographique
Internationale (IHO/OHI).
The ISO material can be obtained from any ISO member and from the Web site of the ISO Central
Secretariat at www.iso.org.
The OGC material can be obtained from the OGC Web site at www.opengeospatial.org.
The IHO material can be obtained from the IHO Web site at www.iho.int or from the International
Hydrographic Organization Secretariat.

Permission to copy and distribute this document is hereby granted provided that this notice is
retained on all copies, and that the IHO is credited when the material is redistributed
or used in part or whole in derivative works.
Redistributions in binary form must reproduce this notice in the documentation and/or other
materials provided with the distribution.

Disclaimer
This work is provided by the copyright holders and contributors "as is" and any express or implied
warranties, including, but not limited to, the implied warranties of merchantability and fitness
for a particular purpose are disclaimed. In no event shall the copyright owner or contributors be
liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including,
but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or
business interruption) however caused and on any theory of liability, whether in contract, strict
liability, or tort (including negligence or otherwise) arising in any way out of the use of this
software, even if advised of the possibility of such damage.
-->
<!-- Version 5.0.0 build 20220331 Updated for changes to Parts 1 and 9. Namespaces updated.
-->
<xs:schema xmlns="http://www.iho.int/S100Presentation/5.0"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:s100Symbol="http://www.iho.int/S100SymbolDefinition/5.0"
  xmlns:s100CSL="http://www.iho.int/s100/csl/5.0" 
  targetNamespace="http://www.iho.int/S100Presentation/5.0" attributeFormDefault="qualified" version="5.0.0-20220331">
	<xs:import namespace="http://www.iho.int/S100SymbolDefinition/5.0" schemaLocation="S100SymbolDefinition.xsd"/>
	<xs:import namespace="http://www.iho.int/s100/csl/5.0" schemaLocation="https://schemas.s100dev.net/schemas/S100/5.0.0/S100CSL/20220331/S100CSL.xsd"/>
	
	<!-- Simple non empty alpha numeric string type for references -->
	<xs:simpleType name="Reference">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:pattern value="[0-9a-zA-Z_]*"/>
		</xs:restriction>
	</xs:simpleType>
	
	<!-- Class Spatial Reference -->
	<xs:complexType name="SpatialReference">
		<xs:simpleContent>
			<xs:extension base="Reference">
				<xs:attribute name="forward" type="xs:boolean" default="true"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	
	<!-- Class AlertReference -->
	<xs:complexType name="AlertReference">
		<xs:simpleContent>
			<xs:extension base="Reference">
				<xs:attribute name="plan" type="xs:string"/>
				<xs:attribute name="monitor" type="xs:string"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	
<!--	<!-\- Class Instant -\->
	<!-\- Multiple points in time may be described via truncated dates used to represent recurring instants -\->
	<!-\- at least one attribute must be present. -\->
	<!-\- See S-100 Part 1, table 1-2 Primitive Types -\->
	<xs:complexType name="Instant">
		<!-\- An S100_TruncatedDate -\->
		<xs:attribute name="date" type="xs:string"/>
		<!-\- An S-100 Time -\->
		<xs:attribute name="time" type="xs:string"/>
		<!-\- An S-100 DateTime -\->
		<xs:attribute name="dateTime" type="xs:string"/>
	</xs:complexType>-->

<!--	<!-\- Class TimeInterval -\->
	<xs:complexType name="TimeInterval">
		<xs:sequence>
			<xs:element name="lower" type="s100CSL:S100_TM_Instant" minOccurs="0"/>
			<xs:element name="upper" type="s100CSL:S100_TM_Instant" minOccurs="0"/>
		</xs:sequence>
		<!-\- Single value intervals are encoded with upper = lower and cllosure = closedInterval or omitted) -\->
		<xs:attribute name="closure" type="s100CSL:S100_IntervalType"/>
	</xs:complexType>-->

	<!-- Class DrawingInstruction -->
	<xs:complexType name="DrawingInstruction" abstract="true">
		<xs:sequence>
			<xs:element name="featureReference" type="Reference"/>
			<xs:element name="spatialReference" type="SpatialReference" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="timeValid" type="s100CSL:S100_TM_Period" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="alertReference" type="AlertReference" minOccurs="0" maxOccurs="1"/>
			<xs:element name="viewingGroup" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
			<xs:element name="displayPlane" type="xs:string"/>
			<xs:element name="drawingPriority" type="xs:int"/>
			<xs:element name="scaleMinimum" type="xs:positiveInteger" minOccurs="0" maxOccurs="1"/>
			<xs:element name="scaleMaximum" type="xs:positiveInteger" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
		<!-- Used to identify a drawing instruction which may have children. May be shared in the case of multiple parents. -->
		<xs:attribute name="id" type="Reference"/>
		<!-- Visibility of this instruction and any children is conditional on visibility of the parent -->
		<xs:attribute name="parentId" type="Reference"/>
		<!-- When true, OEM may optionally show the instruction only on hover-over -->
		<xs:attribute name="hover" type="xs:boolean"/>
	</xs:complexType>
	
	<!-- Class NullInstruction -->
	<xs:complexType name="NullInstruction">
		<xs:complexContent>
			<xs:extension base="DrawingInstruction"/>
		</xs:complexContent>
	</xs:complexType>
	<!-- Class pointInstruction -->
	<xs:complexType name="PointInstruction">
		<xs:complexContent>
			<xs:extension base="DrawingInstruction">
				<xs:sequence>
					<xs:element name="symbol" type="s100Symbol:Symbol"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Class Area Instruction -->
	<xs:complexType name="AreaInstruction">
		<xs:complexContent>
			<xs:extension base="DrawingInstruction">
				<xs:sequence>
					<xs:group ref="s100Symbol:AreaFillGroup"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Class LineInstruction -->
	<xs:complexType name="LineInstruction">
		<xs:complexContent>
			<xs:extension base="DrawingInstruction">
				<xs:sequence>
					<xs:group ref="s100Symbol:LineStyleGroup"/>
				</xs:sequence>
				<xs:attribute name="suppression" type="xs:boolean" default="true"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Class TextInstruction -->
	<xs:complexType name="TextInstruction">
		<xs:complexContent>
			<xs:extension base="DrawingInstruction">
				<xs:sequence>
					<xs:group ref="s100Symbol:Text"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Class CoverageInstruction -->
	<xs:complexType name="CoverageInstruction">
		<xs:complexContent>
			<xs:extension base="DrawingInstruction">
				<xs:sequence>
					<xs:element name="coverageFill" type="s100Symbol:CoverageFill"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Class AugmentedGeometry -->
	<xs:complexType name="AugmentedGeometry" abstract="true">
		<xs:complexContent>
			<xs:extension base="DrawingInstruction">
				<xs:sequence>
					<xs:element name="crs" type="s100Symbol:CRSType"/>
					<xs:group ref="s100Symbol:Text" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Class AugmentedPoint -->
	<xs:complexType name="AugmentedPoint">
		<xs:complexContent>
			<xs:extension base="AugmentedGeometry">
				<xs:sequence>
					<xs:element name="position" type="s100Symbol:Point"/>
					<xs:element name="symbol" type="s100Symbol:Symbol" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Class AugmentedLineOrArea -->
	<xs:complexType name="AugmentedLineOrArea" abstract="true">
		<xs:complexContent>
			<xs:extension base="AugmentedGeometry">
				<xs:sequence>
					<xs:group ref="s100Symbol:LineStyleGroup" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Class AugmentedRay -->
	<xs:complexType name="AugmentedRay">
		<xs:complexContent>
			<xs:extension base="AugmentedLineOrArea">
				<xs:sequence>
					<xs:element name="rotationCRS" type=" s100Symbol:CRSType" minOccurs="0"/>
					<xs:element name="direction" type="xs:double"/>
					<xs:element name="length" type="xs:double"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Class AugmentedPath -->
	<xs:complexType name="AugmentedPath">
		<xs:complexContent>
			<xs:extension base="AugmentedLineOrArea">
				<xs:sequence>
					<xs:element name="path" type="s100Symbol:Path"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Class AugmentedArea -->
	<xs:complexType name="AugmentedArea">
		<xs:complexContent>
			<xs:extension base="AugmentedPath">
				<xs:sequence>
					<xs:group ref="s100Symbol:AreaFillGroup" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Group DisplayInstruction -->
	<xs:group name="DisplayInstruction">
		<xs:choice>
			<xs:element name="nullInstruction" type="NullInstruction"/>
			<xs:element name="pointInstruction" type="PointInstruction"/>
			<xs:element name="lineInstruction" type="LineInstruction"/>
			<xs:element name="areaInstruction" type="AreaInstruction"/>
			<xs:element name="coverageInstruction" type="CoverageInstruction"/>
			<xs:element name="textInstruction" type="TextInstruction"/>
			<xs:element name="augmentedPoint" type="AugmentedPoint"/>
			<xs:element name="augmentedRay" type="AugmentedRay"/>
			<xs:element name="augmentedPath" type="AugmentedPath"/>
			<xs:element name="augmentedArea" type="AugmentedArea"/>
		</xs:choice>
	</xs:group>
	<!-- Class DisplayList -->
	<xs:complexType name="DisplayList">
		<xs:sequence>
			<xs:group ref="DisplayInstruction" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<!-- An element of type DisplayList -->
	<xs:element name="displayList" type="DisplayList"/>
</xs:schema>
